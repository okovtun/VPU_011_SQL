https://github.com/okovtun/BV_123
https://www.youtube.com/watch?v=kJHN4OZAq9w&list=PLeqyOOqxeiIOGly_iU8LhHyPt9re6BE_P

TODO:
Провести ревизию и рефакторинг своего кода в проекте DynamicMemory.

DONE:
Создать ветку DynamicOverload, и в этой ветке перегрузить функции из предыдущего задания 
для одномерных и двумерных массивов типа double и char.
Для каждой функции написать проверочный код.
(Функции можно шаблонизировать, только тогда ветка будет DynamicTemplated)

TODO:
В Solution Pointers добавить проект DynamicMemory, и в нем реализовать функции:
void FillRand(???)		//Заполнение массива случайными числами
void Print(???)			//Вывод массива на экран

??? push_back(???);		//Добавляет значение в конец массива
??? push_front(???);	//Добавляет значение в начало массива
??? insert(???);		//Добавляет значение в массив по указанному индексу
??? pop_back(???);		//Удаляет последний элемент из массива
??? pop_front(???);		//Удаляет нулевой элемент из массива
??? erase(???);			//Удаляет значение из массива по указанному индексу

??? allocate(???);		//Выделяет память под двумерный динамический массив
??? clear(???);			//Очищает память, занимаемую двумерным динамическим массивом
??? push_row_back(???);		//Добавляет строку в конец массива
??? push_row_front(???);	//Добавляет строку в начало массива
??? insert_row(???);	//Добавляет строку в двумерный динамический массив по указанному индексу
??? pop_row_back(???);		//Удаляет строку с конец массива
??? pop_row_front(???);		//Удаляет строку с начала массива
??? erase_row(???);		//Удаляет строку из двумерного динамического массива по указанному индексу
??? push_col_back(???);		//Добавляет столбец в конец массива
??? push_col_front(???);	//Добавляет столбец в начало массива
??? insert_col(???);	//Добавляет столбец в двумерный динамический массив по указанному индексу
??? pop_col_back(???);		//Удаляет столбец с конец массива
??? pop_col_front(???);		//Удаляет столбец с начала массива
??? erase_col(???);		//Удаляет столбец из двумерного динамического массива по указанному индексу

DONE:
Залить на GitHub три любых домашних задания, сделанных ранее.
В MyStat прислать ссылки на репозитории.

DONE:
1. Заристрироваться на github.com;
2. Написать функции:
	bool is_palindrome(char str[]);	DONE //Проверяет, является ли строка палиндромом (ого, или, 12321)
	bool is_int_number(char str[]);	DONE //Проверяет, является ли строка целым десятичным числом
	int  to_int_number(char str[]);	//Если строка - десятичное число, то функция возвращает его int-овое значение.
	bool is_bin_number(char str[]);	//Проверяет, является ли строка двоичным числом
	int  bin_to_dec(char str[]);	//Если строка - двоичное число, то функция возвращает его десятичное значение.
	bool is_hex_number(char str[]);	//Проверяет, является ли строка шестнадцатеричным числом
	int  hex_to_dec(char str[]);	//Если строка - шестнадцатеричное число, то функция возвращает его десятичное значение.
	bool is_mac_address(char str[]);//Проверяет, является ли строка MAC-адресом
	bool is_ip_address(char str[]);//Проверяет, является ли строка IP-адресом
3. ***Написать игру "Крестики нолики";

192.168.1.300